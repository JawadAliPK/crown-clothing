{"ast":null,"code":"var _jsxFileName = \"/Users/jawad/Development/React/crown-clothing/src/contexts/cart.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport Cartitem from \"../components/cart-item/cart-item.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id == productToAdd.id);\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id == productToAdd.id ? {\n      ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n  return [...cartItems, {\n    ...productToAdd,\n    quantity: 1\n  }];\n};\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  cartCount: 0\n});\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  useEffect(() => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    setCartCount(newCartCount);\n  }, [cartItems]);\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    cartItems,\n    cartcoun\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n};\n_s(CartProvider, \"1STVRVZJMMTq6OZavO9o7qwZdno=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","Cartitem","jsxDEV","_jsxDEV","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","CartContext","isCartOpen","setIsCartOpen","addItemToCart","cartCount","CartProvider","children","_s","setCartItems","setCartCount","newCartCount","reduce","total","value","cartcoun","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jawad/Development/React/crown-clothing/src/contexts/cart.context.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport Cartitem from \"../components/cart-item/cart-item.component\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id == productToAdd.id\n  );\n\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.id == productToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  return [...cartItems, { ...productToAdd, quantity: 1 }];\n};\n\nexport const CartContext = createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  cartCount: 0,\n});\n\nexport const CartProvider = ({ children }) => {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n\n  useEffect(() => {\n    const newCartCount = cartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity,\n      0\n    );\n    setCartCount(newCartCount);\n  }, [cartItems]);\n\n  const addItemToCart = (productToAdd) => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n  const value = { isCartOpen, setIsCartOpen, addItemToCart, cartItems, cartcoun };\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,QAAQ,MAAM,6CAA6C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,GAAGA,CAACC,SAAS,EAAEC,YAAY,KAAK;EAC/C,MAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAI,CACpCC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,IAAIJ,YAAY,CAACI,EAC5C,CAAC;EAED,IAAIH,gBAAgB,EAAE;IACpB,OAAOF,SAAS,CAACM,GAAG,CAAEF,QAAQ,IAC5BA,QAAQ,CAACC,EAAE,IAAIJ,YAAY,CAACI,EAAE,GAC1B;MAAE,GAAGD,QAAQ;MAAEG,QAAQ,EAAEH,QAAQ,CAACG,QAAQ,GAAG;IAAE,CAAC,GAChDH,QACN,CAAC;EACH;EAEA,OAAO,CAAC,GAAGJ,SAAS,EAAE;IAAE,GAAGC,YAAY;IAAEM,QAAQ,EAAE;EAAE,CAAC,CAAC;AACzD,CAAC;AAED,OAAO,MAAMC,WAAW,gBAAGf,aAAa,CAAC;EACvCgB,UAAU,EAAE,KAAK;EACjBC,aAAa,EAAEA,CAAA,KAAM,CAAC,CAAC;EACvBV,SAAS,EAAE,EAAE;EACbW,aAAa,EAAEA,CAAA,KAAM,CAAC,CAAC;EACvBC,SAAS,EAAE;AACb,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACN,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACM,SAAS,EAAEgB,YAAY,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,SAAS,EAAEK,YAAY,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAMuB,YAAY,GAAGlB,SAAS,CAACmB,MAAM,CACnC,CAACC,KAAK,EAAEhB,QAAQ,KAAKgB,KAAK,GAAGhB,QAAQ,CAACG,QAAQ,EAC9C,CACF,CAAC;IACDU,YAAY,CAACC,YAAY,CAAC;EAC5B,CAAC,EAAE,CAAClB,SAAS,CAAC,CAAC;EAEf,MAAMW,aAAa,GAAIV,YAAY,IAAK;IACtCe,YAAY,CAACjB,WAAW,CAACC,SAAS,EAAEC,YAAY,CAAC,CAAC;EACpD,CAAC;EACD,MAAMoB,KAAK,GAAG;IAAEZ,UAAU;IAAEC,aAAa;IAAEC,aAAa;IAAEX,SAAS;IAAEsB;EAAS,CAAC;EAE/E,oBAAOxB,OAAA,CAACU,WAAW,CAACe,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAP,QAAA,EAAEA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACZ,EAAA,CAnBWF,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}